apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-fkwzq
    field.cattle.io/publicEndpoints: '[{"addresses":["3.133.144.230"],"port":80,"protocol":"HTTP","serviceName":"default:ingress-4c3c7572ee0d3615c4eab772630c533b","ingressName":"default:testapp","hostname":"testapp.default.3.133.144.230.xip.io","path":"/","allNodes":true}]'
  creationTimestamp: "2019-11-22T08:40:06Z"
  generation: 2
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-testapp
  name: testapp
  namespace: default
  resourceVersion: "1607112"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/testapp
  uid: 715fc5ad-aa63-4b27-aed3-8ffc9db43cbb
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-testapp
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2019-11-22T08:40:06Z"
        field.cattle.io/ports: '[[{"containerPort":3000,"dnsName":"testapp","kind":"ClusterIP","name":"3000tcp30002","protocol":"TCP","sourcePort":3000}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-testapp
    spec:
      containers:
      - image: saurav7055/node-js-sample-app
        imagePullPolicy: Always
        name: testapp
        ports:
        - containerPort: 3000
          name: 3000tcp30002
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2019-11-22T08:40:09Z"
    lastUpdateTime: "2019-11-22T08:40:09Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2019-11-22T08:40:07Z"
    lastUpdateTime: "2019-11-22T08:40:09Z"
    message: ReplicaSet "testapp-6c9d7bf5d" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
